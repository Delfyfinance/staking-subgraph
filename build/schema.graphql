type Pool @entity {
  id: ID!
  token: Token!
  poolSupply: BigInt!
  users:[UserPool!]! @derivedFrom(field: "pool")
  startBlock: BigInt!
  allocationPoints: BigInt!
  totalRewardsMinted: BigInt!
  lastRewardBlock: BigInt!
  accruedShare: BigInt!
  type: PoolType!
}

type User @entity {
  id: ID!
  address: Bytes!
  pools: [UserPool!]! @derivedFrom(field: "user")
  totalRewardsEarned: BigInt!
}

type UserPool @entity{
  id: ID!
  user: User!
  pool: Pool!
  totalAmountDeposited: BigInt!
  lastClaim: BigInt!
  lastWithdrawal: BigInt!
  rewardDebt: BigInt!
}

type Token @entity {
  id: ID!
  address: Bytes!
  name: String!
  symbol: String!
}

type Periphery @entity{
  id: ID!
  admin: Bytes!
  rewardPerBlock: BigInt!
  totalAllocationPoints: BigInt!
  globalStartBlock: BigInt!
  delfy: Token!
}

enum PoolType {
pool
farm
}